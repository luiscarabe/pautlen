;D:	main
;D:	{
;D:	int
;R:	modificadores_acceso: 
;R:	tipo: TOK_INT
;R:	clase_escalar: tipo
;R:	clase: clase_escalar
;D:	v1
;D:	,
;D:	v2
;D:	,
;D:	v3
;D:	;
;R:	identificadores: TOK_IDENTIFICADOR
;R:	identificadores: TOK_IDENTIFICADOR ',' identificadores
;R:	identificadores: TOK_IDENTIFICADOR ',' identificadores
;R:	declaracion: modificadores_acceso clase identificadores ';'
;D:	boolean
;R:	modificadores_acceso: 
;R:	tipo: TOK_BOOLEAN
;R:	clase_escalar: tipo
;R:	clase: clase_escalar
;D:	v4
;D:	;
;R:	identificadores: TOK_IDENTIFICADOR
;R:	declaracion: modificadores_acceso clase identificadores ';'
;D:	function
;R:	declaraciones: declaracion
;R:	declaraciones: declaracion declaraciones
;D:	int
;R:	modificadores_acceso: 
;R:	tipo: TOK_INT
;R:	tipo_retorno: tipo
;D:	f1
;D:	(
;D:	boolean
;R:	tipo: TOK_BOOLEAN
;D:	pf1
;R:	parametro_funcion: tipo TOK_IDENTIFICADOR
;D:	)
;R:	resto_parametros_funcion: 
;R:	parametros_funcion: parametro_funcion resto_parametros_funcion
;D:	{
;D:	int
;R:	modificadores_acceso: 
;R:	tipo: TOK_INT
;R:	clase_escalar: tipo
;R:	clase: clase_escalar
;D:	vl1
;D:	;
;R:	identificadores: TOK_IDENTIFICADOR
;R:	declaracion: modificadores_acceso clase identificadores ';'
;D:	vl1
;R:	declaraciones: declaracion
;R:	declaraciones_funcion: declaraciones
;D:	=
;D:	1
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	v1
;D:	=
;D:	40
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	if
;D:	(
;D:	pf1
;D:	)
;D:	{
;D:	vl1
;D:	=
;D:	v1
;D:	+
;D:	2
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	}
;R:	sentencias: sentencia
;D:	return
;R:	bloque: condicional
;R:	sentencia: bloque
;D:	vl1
;D:	;
;R:	retorno_funcion: TOK_RETURN exp
;R:	sentencia_simple: retorno_funcion
;R:	sentencia: sentencia_simple ';'
;D:	}
;R:	sentencias: sentencia
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;D:	v1
;R:	funciones: 
;R:	funciones: funcion funciones
;D:	=
;D:	1
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	v4
;D:	=
;D:	true
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	v2
;D:	=
;D:	f1
;D:	(
;D:	v4
;D:	)
;R:	resto_lista_expresiones: 
;R:	lista_expresiones: exp resto_lista_expresiones
;R:	exp: TOK_IDENTIFICADOR '(' lista_expresiones ')'
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	v3
;D:	=
;D:	f1
;D:	(
;D:	false
;D:	)
;R:	resto_lista_expresiones: 
;R:	lista_expresiones: exp resto_lista_expresiones
;R:	exp: TOK_IDENTIFICADOR '(' lista_expresiones ')'
;D:	;
;R:	sentencia_simple: asignacion
;R:	sentencia: sentencia_simple ';'
;D:	printf
;D:	v2
;D:	;
;R:	escritura: TOK_PRINTF exp
;R:	sentencia_simple: escritura
;R:	sentencia: sentencia_simple ';'
;D:	printf
;D:	v4
;D:	;
;R:	escritura: TOK_PRINTF exp
;R:	sentencia_simple: escritura
;R:	sentencia: sentencia_simple ';'
;D:	}
;R:	sentencias: sentencia
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	sentencias: sentencia sentencias
;R:	programa: TOK_MAIN '{' declaraciones funciones sentencias '}'
